DROP TABLE POKEMON CASCADE CONSTRAINTS;
DROP TABLE ELEMENT CASCADE CONSTRAINTS;
DROP TABLE MOVE CASCADE CONSTRAINTS;
DROP TABLE EGG_GROUP CASCADE CONSTRAINTS;
DROP TABLE POKEBALL CASCADE CONSTRAINTS;
DROP TABLE POKE_MOVE CASCADE CONSTRAINTS;
DROP TABLE POKE_ELEMENT CASCADE CONSTRAINTS;
DROP TABLE POKE_EGG CASCADE CONSTRAINTS;
DROP TABLE LOCATION CASCADE CONSTRAINTS;
DROP TABLE TRAINER CASCADE CONSTRAINTS;
DROP TABLE POKE_LOCATION CASCADE CONSTRAINTS;
DROP TABLE TRAINER_POKEBALL CASCADE CONSTRAINTS;
DROP TABLE TRAINED_POKEMON CASCADE CONSTRAINTS;


DROP TABLE CLASS CASCADE CONSTRAINTS;


CREATE TABLE POKEMON
(
  POKEMON_ID INT NOT NULL,
  POKEMON_NAME VARCHAR(20) NOT NULL,
  SPECIES VARCHAR(20) NOT NULL,
  HEIGHT_FEET INT NOT NULL,
  HEIGHT_INCH INT NOT NULL,
  WEIGHT_LBS NUMERIC(5) NOT NULL,
  HP INT NOT NULL,
  ATTACK INT NOT NULL,
  DEFENSE INT NOT NULL,
  SP_ATTACK INT NOT NULL,
  SP_DEFENSE INT NOT NULL,
  SPEED INT NOT NULL,
  PRIMARY KEY (POKEMON_ID)
  CONSTRAINT CHECK_HEIGHT_INCH CHECK (HEIGHT_INCH BETWEEN 0 AND 11),

);

CREATE TABLE ELEMENT
(
  ELEMENT_ID INT NOT NULL,
  ELEMENT_NAME VARCHAR(20) NOT NULL,
  COLOR VARCHAR(15) NOT NULL,
  STRONGER_ELEMENT VARCHAR(20) NOT NULL,
  WEAKER_ELEMENT VARCHAR(20) NOT NULL,
  DEDICATED_SETTLEMENT VARCHAR(20) NOT NULL,
  PROFICIENT_STAT VARCHAR(20) NOT NULL,
  DEFICIENT_STAT VARCHAR(20) NOT NULL,
  PRIMARY KEY (ELEMENT_ID)
);

CREATE TABLE MOVE
(
  MOVE_ID INT NOT NULL,
  MOVE_NAME VARCHAR(30) NOT NULL,
  TYPE VARCHAR(10) NOT NULL,
  CATEGORY VARCHAR(100) NOT NULL,
  POWER INT,
  ACCURACY INT,
  POWER_POINTS INT,
  EFFECT VARCHAR(100),
  ELEMENT_ID INT NOT NULL,
  PRIMARY KEY (MOVE_ID),
  FOREIGN KEY (ELEMENT_ID) REFERENCES ELEMENT(ELEMENT_ID)
);

CREATE TABLE EGG_GROUP
(
  EGG_GROUP_ID INT NOT NULL,
  EGG_NAME VARCHAR(20) NOT NULL,
  CHARACTERISTIC VARCHAR(30),
  COLOR VARCHAR(20),
  BREEDABLE VARCHAR(20),
  PRIMARY_HABITAT VARCHAR(20),
  MOST_COMPATIBLE_GROUP VARCHAR(20),
  NATURAL_ENEMY VARCHAR(30),
  PRIMARY KEY (EGG_GROUP_ID)
);

CREATE TABLE POKEBALL
(
  POKEBALL_ID INT NOT NULL,
  TYPE VARCHAR(20) NOT NULL,
  COLOR VARCHAR(15),
  RETAIL_PRICE INT,
  RESALE_PRICE INT,
  CATCH_RATE NUMERIC(5),
  DESCRIPTION VARCHAR(100),
  MANUFACTURER VARCHAR(100),
  PRIMARY KEY (POKEBALL_ID)
);

CREATE TABLE POKE_MOVE
(
  P_M_ID INT NOT NULL,
  POKEMON_ID INT NOT NULL,
  MOVE_ID INT NOT NULL,
  PRIMARY KEY (P_M_ID),
  FOREIGN KEY (POKEMON_ID) REFERENCES POKEMON(POKEMON_ID),
  FOREIGN KEY (MOVE_ID) REFERENCES MOVE(MOVE_ID)
);

CREATE TABLE POKE_ELEMENT
(
  P_E_ID INT NOT NULL,
  POKEMON_ID INT NOT NULL,
  ELEMENT_ID INT NOT NULL,
  PRIMARY KEY (P_E_ID),
  FOREIGN KEY (POKEMON_ID) REFERENCES POKEMON(POKEMON_ID),
  FOREIGN KEY (ELEMENT_ID) REFERENCES ELEMENT(ELEMENT_ID)
);

CREATE TABLE POKE_EGG
(
  POKE_EGG_ID INT NOT NULL,
  EGG_GROUP_ID INT NOT NULL,
  POKEMON_ID INT NOT NULL,
  PRIMARY KEY (POKE_EGG_ID),
  FOREIGN KEY (POKEMON_ID) REFERENCES POKEMON(POKEMON_ID),
  FOREIGN KEY (EGG_GROUP_ID) REFERENCES EGG_GROUP(EGG_GROUP_ID)
);

CREATE TABLE LOCATION
(
  LOCATION_ID INT NOT NULL,
  LOCATION_NAME VARCHAR(30) NOT NULL,
  LONGITUDE FLOAT NOT NULL,
  LATITUDE FLOAT NOT NULL,
  PREFECTURE VARCHAR(20) NOT NULL,
  POPULATION INT,
  DESCRIPTION VARCHAR2(400),
  PRIMARY KEY (LOCATION_ID)
);

CREATE TABLE TRAINER
(
  TRAINER_ID INT NOT NULL,
  TRAINER_NAME VARCHAR(20) NOT NULL,
  GENDER VARCHAR(6),
  TRAINER_CLASS VARCHAR(30),
  HOMETOWN VARCHAR(30),
  EYE_COLOR VARCHAR(15),
  HAIR_COLOR VARCHAR(10),
  ELEMENT_ID INT,
  PRIMARY KEY (TRAINER_ID),
  FOREIGN KEY (ELEMENT_ID) REFERENCES ELEMENT(ELEMENT_ID)
);

CREATE TABLE POKE_LOCATION
(
  P_L_ID INT NOT NULL,
  POKEMON_ID INT NOT NULL,
  LOCATION_ID INT NOT NULL,
  PRIMARY KEY (P_L_ID),
  FOREIGN KEY (POKEMON_ID) REFERENCES POKEMON(POKEMON_ID),
  FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID)
);


CREATE TABLE TRAINED_POKEMON
(
  T_P_ID INT NOT NULL,
  TRAINER_ID INT NOT NULL,
  POKEMON_ID INT NOT NULL,
  POKEBALL_ID INT NOT NULL,
  PRIMARY KEY (T_P_ID),
  FOREIGN KEY (TRAINER_ID) REFERENCES TRAINER(TRAINER_ID),
  FOREIGN KEY (POKEMON_ID) REFERENCES POKEMON(POKEMON_ID),
  FOREIGN KEY (POKEBALL_ID) REFERENCES POKEBALL(POKEBALL_ID)
);



















